// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BangazonBE.Migrations
{
    [DbContext(typeof(BangazonDbContext))]
    [Migration("20240826010106_SeedDataMigration")]
    partial class SeedDataMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bangazon.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Paintball"
                        },
                        new
                        {
                            Id = 2,
                            Name = "School Supplies"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Costumes"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Black Market"
                        });
                });

            modelBuilder.Entity("Bangazon.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int>("BuyerId")
                        .HasColumnType("integer");

                    b.Property<bool>("Closed")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("PaymentTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Apt 303, Greendale, Colorado",
                            BuyerId = 2,
                            Closed = true,
                            PaymentTypeId = 2
                        },
                        new
                        {
                            Id = 2,
                            Address = "Abandoned Horse Stables, Greendale Community College, Greendale, Colorado",
                            BuyerId = 8,
                            Closed = false,
                            PaymentTypeId = 5
                        },
                        new
                        {
                            Id = 3,
                            Address = "Inside the Air Vents, Greendale Community College, Greendale, Colorado",
                            BuyerId = 9,
                            Closed = true,
                            PaymentTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "Apt 303, Greendale, Colorado",
                            BuyerId = 1,
                            Closed = false,
                            PaymentTypeId = 3
                        });
                });

            modelBuilder.Entity("Bangazon.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Card"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Paypal"
                        },
                        new
                        {
                            Id = 3,
                            Name = "ApplePay"
                        },
                        new
                        {
                            Id = 4,
                            Name = "GooglePay"
                        },
                        new
                        {
                            Id = 5,
                            Name = "I.O.U."
                        });
                });

            modelBuilder.Entity("Bangazon.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DatePosted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("SellerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SellerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            DatePosted = new DateTime(2013, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "50 red paintballs. High quality rounds quaranteed to explode on contact.",
                            Image = "https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fsc01.alicdn.com%2Fkf%2FHTB1t.dojr_I8KJjy1Xaq6zsxpXaz%2F230016343%2FHTB1t.dojr_I8KJjy1Xaq6zsxpXaz.jpg&f=1&nofb=1&ipt=bae9eed89237af046bf8fc55a031b15e180a44a5e85cdbded158ec1f1157e017&ipo=images",
                            Name = "Red Paintballs x 50",
                            Price = 20.00m,
                            Quantity = 20,
                            SellerId = 8
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            DatePosted = new DateTime(2013, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "50 silver paintballs. Rare find.",
                            Image = "https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.discountpaintball.com%2Fcdn-cgi%2Fimage%2Fwidth%253D600%252Cquality%253D100%2Fassets%2Fimages%2F900-270-03611-1.jpg&f=1&nofb=1&ipt=5236d4f3c11f23bd6bdeada50f8d01cb3e7895dce7fcdf4be2f94872590f36c1&ipo=images",
                            Name = "Silver Paintballs x 50",
                            Price = 40.00m,
                            Quantity = 10,
                            SellerId = 4
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            DatePosted = new DateTime(2012, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Goatees for dark timelines. Made from high quality felt.",
                            Image = "https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.pinimg.com%2F736x%2F94%2Fd9%2Fa5%2F94d9a54617e69c7fc968373236573d00--timeline-tape.jpg&f=1&nofb=1&ipt=c81763d68d9d5d8fb91354adbc059652caebe9f105935212167c7af72f3ae05c&ipo=images",
                            Name = "Villanous Goatee",
                            Price = 5.00m,
                            Quantity = 7,
                            SellerId = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            DatePosted = new DateTime(2011, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Answers to upcoming Ladders midterm.",
                            Image = "https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcdn-0.studybreaks.com%2Fwp-content%2Fuploads%2F2017%2F07%2FTest-Bubble-Sheet-1024x682.jpg&f=1&nofb=1&ipt=3d37374e4800ba9dc3128d3f3fdf684e9bb6d9d44fb0de5a3f0326d55d94f13e&ipo=images",
                            Name = "Test Answers for Ladders",
                            Price = 25.00m,
                            Quantity = 4,
                            SellerId = 9
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            DatePosted = new DateTime(2009, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sequined ballgown in shimmering magenta, size 8.",
                            Image = "https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fwww.heyuguys.com%2Fimages%2F2012%2F09%2FCommunity-Fabulous-Dean.jpg&f=1&nofb=1&ipt=e7c19e8d51e20a333b685ac09292f375c392c74887ef357c7fda0fa57750983e&ipo=images",
                            Name = "Ballgown size 8",
                            Price = 50.00m,
                            Quantity = 1,
                            SellerId = 7
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            DatePosted = new DateTime(2010, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Restractable purple gel pen with fine point tip.",
                            Image = "https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.theknowledgetree.com%2Fprodimages%2F175684-DEFAULT-l.jpg&f=1&nofb=1&ipt=386507ad54b25be58a9b3644397e91cab2fd976025805b45625776df3f3d09d4&ipo=images",
                            Name = "Purple gel pen",
                            Price = 2.00m,
                            Quantity = 12,
                            SellerId = 6
                        });
                });

            modelBuilder.Entity("Bangazon.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirebaseKey")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "anadir@greendale.edu",
                            FirstName = "Abed",
                            LastName = "Nadir",
                            Username = "InspectorSpaceTime"
                        },
                        new
                        {
                            Id = 2,
                            Email = "tbarnes@greendale.edu",
                            FirstName = "Troy",
                            LastName = "Barnes",
                            Username = "ConstableReggie"
                        },
                        new
                        {
                            Id = 3,
                            Email = "sbennett@greendale.edu",
                            FirstName = "Shirley",
                            LastName = "Bennet",
                            Username = "shirleySandwiches"
                        },
                        new
                        {
                            Id = 4,
                            Email = "jwinger@greendale.edu",
                            FirstName = "Jeff",
                            LastName = "Winger",
                            Username = "Wingman"
                        },
                        new
                        {
                            Id = 5,
                            Email = "bperry@greendale.edu",
                            FirstName = "Britta",
                            LastName = "Perry",
                            Username = "Britta"
                        },
                        new
                        {
                            Id = 6,
                            Email = "aedison@greendale.edu",
                            FirstName = "Annie",
                            LastName = "Edison",
                            Username = "Milady"
                        },
                        new
                        {
                            Id = 7,
                            Email = "dean@greendale.edu",
                            FirstName = "Craig",
                            LastName = "Pelton",
                            Username = "DeanLightful"
                        },
                        new
                        {
                            Id = 8,
                            Email = "aosbourne@greendale.edu",
                            FirstName = "Alex",
                            LastName = "Osbourne",
                            Username = "StarBurns"
                        },
                        new
                        {
                            Id = 9,
                            Email = "kevin@greendale.edu",
                            FirstName = "Ben",
                            LastName = "Chang",
                            Username = "Kevin"
                        });
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductsId")
                        .HasColumnType("integer");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("Bangazon.Models.Order", b =>
                {
                    b.HasOne("Bangazon.Models.User", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("Bangazon.Models.Product", b =>
                {
                    b.HasOne("Bangazon.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bangazon.Models.User", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("Bangazon.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bangazon.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
